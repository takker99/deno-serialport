name: Build

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            triplet: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            triplet: win32-arm64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            triplet: linux-x64-gnu
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            triplet: linux-arm64-gnu
          - os: macos-13
            target: x86_64-apple-darwin
            triplet: darwin-x64
          - os: macos-14
            target: aarch64-apple-darwin
            triplet: darwin-arm64

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build cdylib
        shell: bash
        run: |
          set -eux
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          set -eux
          mkdir -p dist/${{ matrix.triplet }}
          case "${{ matrix.target }}" in
            *windows*) name="deno_serial.dll" ; ext="dll" ;;
            *linux*)   name="libdeno_serial.so" ; ext="so" ;;
            *darwin*)  name="libdeno_serial.dylib" ; ext="dylib" ;;
          esac
          cp target/${{ matrix.target }}/release/${name} dist/${{ matrix.triplet }}/${name} || cp target/${{ matrix.target }}/release/*.${ext} dist/${{ matrix.triplet }}/${name}
          (cd dist/${{ matrix.triplet }} && (shasum -a 256 ${name} > ${name}.sha256 || sha256sum ${name} > ${name}.sha256))

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.triplet }}
          path: dist/${{ matrix.triplet }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-22.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/**/*
